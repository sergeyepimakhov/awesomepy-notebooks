{%- extends 'classic/base.html.j2' -%}
{% from 'mathjax.html.j2' import mathjax %}


{%- block header -%}
<!DOCTYPE html>
<html>
<head>
{%- block html_head -%}
<meta charset="utf-8" />
{% set nb_title = nb.metadata.get('title', '') or resources['metadata']['name'] %}
<title>{{nb_title}}</title>

{%- block html_head_js -%}
{%- block html_head_js_jquery -%}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
{%- endblock html_head_js_jquery -%}
{%- block html_head_js_requirejs -%}
<script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
{%- endblock html_head_js_requirejs -%}
{%- endblock html_head_js -%}

{% block ipywidgets %}
{%- if "widgets" in nb.metadata -%}
<script>
(function() {
  function addWidgetsRenderer() {
    var mimeElement = document.querySelector('script[type="application/vnd.jupyter.widget-view+json"]');
    var scriptElement = document.createElement('script');
    var widgetRendererSrc = '{{ resources.ipywidgets_base_url }}@jupyter-widgets/html-manager@*/dist/embed-amd.js';
    var widgetState;

    // Fallback for older version:
    try {
      widgetState = mimeElement && JSON.parse(mimeElement.innerHTML);

      if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) {
        widgetRendererSrc = '{{ resources.ipywidgets_base_url }}jupyter-js-widgets@*/dist/embed.js';
      }
    } catch(e) {}

    scriptElement.src = widgetRendererSrc;
    document.body.appendChild(scriptElement);
  }

  document.addEventListener('DOMContentLoaded', addWidgetsRenderer);
}());
</script>
{%- endif -%}
{% endblock ipywidgets %}

<!-- CodeMirror theme -->
<!-- <link rel="stylesheet" href="https://codemirror.net/theme/blackboard.css"> -->
<!-- <link rel="stylesheet" href="https://codemirror.net/theme/solarized.css"> -->
<!-- <link rel="stylesheet" href="https://codemirror.net/theme/eclipse.css"> -->

<!-- configure and load thebe -->
<script type="text/x-thebe-config">
    {
      bootstrap: true,
      requestKernel: true,
      binderOptions: {
        repo: "sergeyepimakhov/hello-jupyter",
      },
      kernelOptions: {
        name: "python3",
      },
      codeMirrorconfig: {
        lineNumbers: true,
        theme: "ipython",
        // theme: "blackboard",
        // theme: "solarized light"
        // theme: "eclipse",
      },
    }
</script>
<script type="text/javascript" src="/static/js/thebe/lib/index.js"></script>

{% block extra_css %}
{%- block html_head_css_fontawesome -%}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.min.css" />
{%- endblock html_head_css_fontawesome -%}
{% endblock extra_css %}

{% for css in resources.inlining.css -%}
    <style type="text/css">
    {{ css }}
    </style>
{% endfor %}


{% block notebook_css %}
{{ resources.include_css("/static/css/classic/style.css") }}
<style type="text/css">
/* Overrides of notebook CSS for static HTML export */
body {
  overflow: visible;
  padding: 8px;
}

div#notebook {
  overflow: visible;
  border-top: none;
}

{%- if resources.global_content_filter.no_prompt-%}
div#notebook-container{
  padding: 6ex 12ex 8ex 12ex;
}
{%- endif -%}

@media print {
  div.cell {
    display: block;
    page-break-inside: avoid;
  }
  div.output_wrapper {
    display: block;
    page-break-inside: avoid;
  }
  div.output {
    display: block;
    page-break-inside: avoid;
  }
}
</style>
{% endblock notebook_css %}


<!-- Custom stylesheet, it must be in the same directory as the html file -->
{% block custom_css %}
<link rel="stylesheet" type="text/css" href="/static/css/classic/custom.css">
{% endblock custom_css %}

{% block notebook_js %}
{{ resources.include_js("/static/js/classic/index.js") }}
{% endblock notebook_js %}

<!-- Loading mathjax macro -->
{{ mathjax() }}


{%- block html_head_css -%}
{%- endblock html_head_css -%}

{%- endblock html_head -%}
</head>
{%- endblock header -%}

{# using the body block like this makes is difficult to be composable, added body_content/body_cells block for that#}
{% block body_header %}
<body>
  <div tabindex="-1" id="notebook" class="border-box-sizing">
    <div class="container" id="notebook-container">
{% endblock body_header %}

{% block body_footer %}
    </div>
  </div>
</body>
{% endblock body_footer %}

{% block footer %}
{% block footer_js %}
{% endblock footer_js %}
{{ super() }}
</html>
{% endblock footer %}
